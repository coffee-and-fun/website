<!DOCTYPE html>
<html class="scroll-smooth antialiased" lang="en" data-theme="retro">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    
    <!-- Primary Meta Tags -->
    <title>Free Receipt Generator - Create Professional Receipts | Coffee & Fun LLC</title>
    <meta name="title" content="Free Receipt Generator - Create Professional Receipts | Coffee & Fun LLC" />
    <meta name="description" content="Generate professional replacement receipts for bookkeeping. Create, customize, and download receipts as PDF with tax calculations and business branding. Privacy-focused, works locally in your browser." />
    <meta name="keywords" content="receipt generator, receipt maker, bookkeeping tool, replacement receipt, business receipt, PDF receipt, tax calculator, Coffee & Fun" />
    <meta name="author" content="Coffee & Fun LLC" />
    <meta name="robots" content="index, follow" />
    
    <!-- Canonical URL -->
    <link rel="canonical" href="/receipt-generator/" />
    
    <!-- Favicon -->
    <link rel="icon" href="/assets/images/favicon.png" sizes="any" />
  
    <!-- Open Graph Meta Tags -->
    <meta property="og:type" content="website" />
    <meta property="og:site_name" content="Coffee & Fun" />
    <meta property="og:title" content="Free Receipt Generator - Create Professional Receipts" />
    <meta property="og:description" content="Generate professional replacement receipts for bookkeeping. Create, customize, and download receipts as PDF with tax calculations and business branding. Privacy-focused, works locally in your browser." />
    <meta property="og:url" content="/receipt-generator/" />
    <meta property="og:image" content="/assets/images/social/pages/receipt-generator.png" />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta property="og:image:alt" content="Free Receipt Generator by Coffee & Fun - Create Professional Business Receipts" />
    <meta property="og:locale" content="en_US" />
    
    <!-- Twitter Card Meta Tags -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:site" content="@bycoffeeandfun" />
    <meta name="twitter:creator" content="@bycoffeeandfun" />
    <meta name="twitter:title" content="Free Receipt Generator - Create Professional Receipts" />
    <meta name="twitter:description" content="Generate professional replacement receipts for bookkeeping. Create, customize, and download receipts as PDF with tax calculations and business branding. Privacy-focused, works locally in your browser." />
    <meta name="twitter:image" content="/assets/images/social/pages/receipt-generator.png" />
    <meta name="twitter:image:alt" content="Free Receipt Generator by Coffee & Fun - Create Professional Business Receipts" />
    <meta name="twitter:domain" content="coffeeandfun.com" />
    <meta name="twitter:url" content="/receipt-generator/" />
    
    <!-- PWA and Mobile Enhancement -->
    <meta name="theme-color" content="#8B4513" media="(prefers-color-scheme: light)" />
    <meta name="theme-color" content="#D4A574" media="(prefers-color-scheme: dark)" />
    <meta name="mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />
    <meta name="apple-mobile-web-app-title" content="Receipt Generator" />
    
    <!-- Enhanced Structured Data -->
    <script type="application/ld+json">
    {
        "@context": "https://schema.org",
        "@graph": [
            {
                "@type": "WebSite",
                "@id": "https://www.coffeeandfun.com/#website",
                "name": "Coffee & Fun",
                "description": "Apps, games, and digital experiences by Coffee & Fun LLC",
                "url": "https://www.coffeeandfun.com/",
                "publisher": {
                    "@id": "https://www.coffeeandfun.com/#organization"
                }
            },
            {
                "@type": "WebPage",
                "@id": "https://www.coffeeandfun.com/receipt-generator/#webpage",
                "url": "https://www.coffeeandfun.com/receipt-generator/",
                "name": "Free Receipt Generator",
                "description": "Generate professional replacement receipts for bookkeeping with our privacy-focused tool.",
                "isPartOf": {
                    "@id": "https://www.coffeeandfun.com/#website"
                },
                "about": {
                    "@type": "Thing",
                    "name": "Receipt Generation Tool"
                },
                "mainEntity": {
                    "@type": "SoftwareApplication",
                    "name": "Free Receipt Generator",
                    "description": "Privacy-focused web-based tool for creating professional business receipts with PDF export and tax calculations",
                    "url": "https://www.coffeeandfun.com/receipt-generator/",
                    "applicationCategory": "BusinessApplication",
                    "operatingSystem": "Web Browser",
                    "offers": {
                        "@type": "Offer",
                        "price": "0",
                        "priceCurrency": "USD"
                    },
                    "featureList": [
                        "Create professional receipts",
                        "PDF export functionality",
                        "Tax calculations",
                        "Business logo upload",
                        "Local data processing",
                        "No data tracking"
                    ]
                }
            },
            {
                "@type": "Organization",
                "@id": "https://www.coffeeandfun.com/#organization",
                "name": "Coffee & Fun LLC",
                "legalName": "Coffee & Fun LLC",
                "url": "https://www.coffeeandfun.com/",
                "logo": {
                    "@type": "ImageObject",
                    "url": "https://www.coffeeandfun.com/assets/images/logo.png",
                    "width": 512,
                    "height": 512
                },
                "description": "Digital experiences and applications company specializing in clean, user-friendly web applications.",
                "sameAs": [
                    "https://x.com/bycoffeeandfun"
                ]
            }
        ]
    }
    </script>
    
    <!-- External Libraries -->
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdn.jsdelivr.net/npm/daisyui@4.4.24/dist/full.min.css" rel="stylesheet" type="text/css" />
    <script src="https://unpkg.com/vue@3"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    
    <style>
        [v-cloak] { display: none; }
        
        .fade-in {
            animation: fadeIn 0.5s ease-in;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .receipt-preview {
            background: white;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            font-family: 'Courier New', monospace;
            color: #000;
        }
        
        .receipt-divider {
            border-top: 1px dashed #666;
            margin: 12px 0;
        }
        
        .receipt-item {
            display: flex;
            justify-content: space-between;
            margin: 4px 0;
        }
        
        .logo-preview {
            max-width: 150px;
            max-height: 80px;
            object-fit: contain;
        }
        
        .processing {
            animation: pulse 2s infinite;
        }
        
        @keyframes pulse {
            0%, 100% { opacity: 1; }
            50% { opacity: 0.5; }
        }
        
        @media print {
            body * {
                visibility: hidden;
            }
            .receipt-preview, .receipt-preview * {
                visibility: visible;
            }
            .receipt-preview {
                position: absolute;
                left: 0;
                top: 0;
            }
        }
    </style>
</head>
<body class="bg-base-100 min-h-screen">
            {% assign showFun = true %} 
    {% assign showMiddleBadgeWithText = true %} 
    {% include header.liquid %}
    <div v-cloak id="app" class="container mx-auto max-w-6xl p-6">
        <!-- Header -->
        <header class="text-center mb-12">
            <h1 class="text-4xl font-bold text-base-content mb-2">Receipt Generator</h1>
            <p class="text-base-content/70">Create professional replacement receipts for bookkeeping</p>
        </header>

        <!-- Privacy Notice -->
        <div class="alert alert-info mb-8 alert-soft">
            <h3 class="font-bold">All processing happens locally. Receipts are for legitimate bookkeeping purposes only.</h3>
        </div>

        <div class="grid lg:grid-cols-2 gap-8">
            <!-- Input Form -->
            <div class="space-y-6">
                <!-- Business Information -->
                <div class="card bg-base-200 shadow-lg">
                    <div class="card-body">
                        <h2 class="card-title text-xl mb-4">Business Information</h2>
                        
                        <div class="space-y-4">
                            <div>
                                <label class="label">
                                    <span class="label-text">Company Name *</span>
                                </label>
                                <input 
                                    type="text" 
                                    v-model="receipt.businessName" 
                                    placeholder="Your Business Name" 
                                    class="input input-bordered w-full"
                                    required
                                />
                            </div>
                            
                            <div>
                                <label class="label">
                                    <span class="label-text">Business Address</span>
                                </label>
                                <textarea 
                                    v-model="receipt.businessAddress" 
                                    placeholder="123 Main St, City, State ZIP" 
                                    class="textarea textarea-bordered w-full"
                                    rows="2"
                                ></textarea>
                            </div>
                            
                            <div class="grid grid-cols-2 gap-4">
                                <div>
                                    <label class="label">
                                        <span class="label-text">Phone</span>
                                    </label>
                                    <input 
                                        type="tel" 
                                        v-model="receipt.businessPhone" 
                                        placeholder="(555) 123-4567" 
                                        class="input input-bordered w-full"
                                    />
                                </div>
                                <div>
                                    <label class="label">
                                        <span class="label-text">Email</span>
                                    </label>
                                    <input 
                                        type="email" 
                                        v-model="receipt.businessEmail" 
                                        placeholder="info@business.com" 
                                        class="input input-bordered w-full"
                                    />
                                </div>
                            </div>
                            
                            <div>
                                <label class="label">
                                    <span class="label-text">Business Logo (optional)</span>
                                </label>
                                <input 
                                    type="file" 
                                    @change="handleLogoUpload" 
                                    accept="image/*" 
                                    class="file-input file-input-bordered w-full"
                                />
                                <button 
                                    v-if="receipt.logo" 
                                    @click="removeLogo" 
                                    class="btn btn-soft btn-sm btn-ghost mt-2"
                                >
                                    Remove Logo
                                </button>
                            </div>
                            
                            <div class="flex gap-2">
                                <button 
                                    @click="saveBusinessInfo" 
                                    class="btn btn-soft btn-sm btn-primary"
                                >
                                    Save Info
                                </button>
                                <button 
                                    v-if="hasSavedBusinessInfo" 
                                    @click="loadBusinessInfo" 
                                    class="btn btn-soft btn-sm btn-secondary"
                                >
                                    Load Saved
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Receipt Details -->
                <div class="card bg-base-200 shadow-lg">
                    <div class="card-body">
                        <h2 class="card-title text-xl mb-4">Receipt Details</h2>
                        
                        <div class="space-y-4">
                            <div class="grid grid-cols-2 gap-4">
                                <div>
                                    <label class="label">
                                        <span class="label-text">Receipt Number</span>
                                    </label>
                                    <input 
                                        type="text" 
                                        v-model="receipt.receiptNumber" 
                                        placeholder="RCP-001" 
                                        class="input input-bordered w-full"
                                    />
                                </div>
                                <div>
                                    <label class="label">
                                        <span class="label-text">Date *</span>
                                    </label>
                                    <input 
                                        type="date" 
                                        v-model="receipt.date" 
                                        class="input input-bordered w-full"
                                        required
                                    />
                                </div>
                            </div>
                            
                            <div>
                                <label class="label">
                                    <span class="label-text">Payment Method</span>
                                </label>
                                <select v-model="receipt.paymentMethod" class="select select-bordered w-full">
                                    <option>Cash</option>
                                    <option>Credit Card</option>
                                    <option>Debit Card</option>
                                    <option>Check</option>
                                    <option>Bank Transfer</option>
                                    <option>Other</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Items -->
                <div class="card bg-base-200 shadow-lg">
                    <div class="card-body">
                        <h2 class="card-title text-xl mb-4">Items</h2>
                        
                        <div class="space-y-4">
                            <div 
                                v-for="(item, index) in receipt.items" 
                                :key="index"
                                class="p-4 bg-base-100 rounded-lg"
                            >
                                <div class="flex justify-between items-start mb-2">
                                    <h4 class="font-semibold">Item # {% raw %} {{ index + 1 }} {% endraw %}</h4>
                                    <button 
                                        v-if="receipt.items.length > 1"
                                        @click="removeItem(index)" 
                                        class="btn btn-soft btn-sm btn-ghost btn-circle"
                                    >
                                        ✕
                                    </button>
                                </div>
                                
                                <div class="grid grid-cols-3 gap-2">
                                    <div class="col-span-2">
                                        <input 
                                            type="text" 
                                            v-model="item.description" 
                                            placeholder="Item description" 
                                            class="input input-bordered input-sm w-full"
                                        />
                                    </div>
                                    <div>
                                        <input 
                                            type="number" 
                                            v-model.number="item.quantity" 
                                            placeholder="Qty" 
                                            min="1"
                                            class="input input-bordered input-sm w-full"
                                        />
                                    </div>
                                </div>
                                
                                <div class="mt-2">
                                    <input 
                                        type="number" 
                                        v-model.number="item.price" 
                                        placeholder="Price per item" 
                                        step="0.01"
                                        min="0"
                                        class="input input-bordered input-sm w-full"
                                    />
                                </div>
                            </div>
                            
                            <button 
                                @click="addItem" 
                                class="btn btn-soft btn-outline btn-primary w-full"
                            >
                                + Add Item
                            </button>
                            
                            <!-- Tax Rate -->
                            <div>
                                <label class="label">
                                    <span class="label-text">Tax Rate (%)</span>
                                </label>
                                <input 
                                    type="number" 
                                    v-model.number="receipt.taxRate" 
                                    placeholder="8.5" 
                                    step="0.01"
                                    min="0"
                                    max="100"
                                    class="input input-bordered w-full"
                                />
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Preview -->
            <div class="lg:sticky lg:top-6 h-fit">
                <div class="card bg-base-200 shadow-lg mb-6">
                    <div class="card-body">
                        <h2 class="card-title text-xl mb-4">Preview</h2>
                        
                        <!-- Receipt Preview -->
                        <div id="receipt-preview" class="receipt-preview p-8 rounded-lg">
                            <!-- Header with Logo -->
                            <div class="text-center mb-6">
                                <img 
                                    v-if="receipt.logo" 
                                    :src="receipt.logo" 
                                    alt="Business Logo" 
                                    class="logo-preview mx-auto mb-4"
                                />
                                <h3 class="text-xl font-bold"> {% raw %} {{ receipt.businessName }} {% endraw %}</h3>
                                <div v-if="receipt.businessAddress" class="text-sm mt-1">
                                    {{ receipt.businessAddress }}
                                </div>
                                <div v-if="hasContactInfo" class="text-sm">
                                    <span v-if="receipt.businessPhone"> {% raw %} {{ receipt.businessPhone }} {% endraw %}</span>
                                    <span v-if="receipt.businessPhone && receipt.businessEmail"> • </span>
                                    <span v-if="receipt.businessEmail"> {% raw %} {{ receipt.businessEmail }} {% endraw %}</span>
                                </div>
                            </div>
                            
                            <div class="receipt-divider"></div>
                            
                            <!-- Receipt Info -->
                            <div class="text-sm mb-4">
                                <div class="receipt-item">
                                    <span>Receipt #:</span>
                                    <span> {% raw %} {{ receiptNumber }} {% endraw %}</span>
                                </div>
                                <div class="receipt-item">
                                    <span>Date:</span>
                                    <span> {% raw %} {{ formatDate(receipt.date) }} {% endraw %}</span>
                                </div>
                                <div class="receipt-item">
                                    <span>Payment:</span>
                                    <span> {% raw %} {{ receipt.paymentMethod }} {% endraw %}</span>
                                </div>
                            </div>
                            
                            <div class="receipt-divider"></div>
                            
                            <!-- Items -->
                            <div class="mb-4">
                                <div 
                                    v-for="(item, index) in validItems" 
                                    :key="index"
                                    class="mb-2"
                                >
                                    <div class="receipt-item text-sm">
                                        <span> {% raw %} {{ item.description }} {% endraw %}</span>
                                        <span>{% raw %}  ${{ (item.quantity * item.price).toFixed(2) }} {% endraw %}</span>
                                    </div>
                                    <div class="text-xs text-gray-600 ml-2">
                                  {% raw %}      {{ item.quantity }} × ${{ item.price.toFixed(2) }}  {% endraw %}
                                    </div>
                                </div>
                            </div>
                            
                            <div class="receipt-divider"></div>
                            
                            <!-- Totals -->
                            <div class="space-y-1">
                                <div class="receipt-item">
                                    <span>Subtotal:</span>
                                    {% raw %}<span>${{ subtotal.toFixed(2) }} </span> {% endraw %}
                                </div>
                                <div class="receipt-item">
                                    {% raw %}<span>Tax ({{ receipt.taxRate }}%): </span> {% endraw %}
                                 {% raw %}    <span>${{ taxAmount.toFixed(2) }}</span> {% endraw %}
                                </div>
                                <div class="receipt-divider"></div>
                                <div class="receipt-item font-bold text-lg">
                                    <span>Total:</span>
                                    {% raw %}<span>${{ total.toFixed(2) }} </span> {% endraw %}
                                </div>
                            </div>
                            
                            <div class="receipt-divider"></div>
                            
                            <!-- Footer -->
                            <div class="text-center text-xs mt-6 text-gray-600">
                                <p>Thank you for your business!</p>
                                <p class="mt-2">This receipt was generated for bookkeeping purposes.</p>
                                <p>For questions about this transaction, please contact us at coffeeandfun.com</p>
                            </div>
                        </div>
                        
                        <!-- Action Buttons -->
                        <div class="flex flex-wrap gap-2 mt-6">
                            <button 
                                @click="generatePDF" 
                                class="btn btn-soft btn-primary"
                                :disabled="!isValidReceipt"
                            >
                                Download PDF
                            </button>
                            <button 
                                @click="printReceipt" 
                                class="btn btn-soft btn-secondary"
                                :disabled="!isValidReceipt"
                            >
                                Print
                            </button>
                            <button 
                                @click="resetReceipt" 
                                class="btn btn-soft btn-outline"
                            >
                                New Receipt
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Help Section -->
        <div class="card bg-base-200 shadow-lg mt-8">
            <div class="card-body">
                <h3 class="card-title mb-4">About This Tool</h3>
                
                <div class="grid md:grid-cols-2 gap-6">
                    <div>
                        <h4 class="font-bold mb-2">When to Use</h4>
                        <ul class="text-sm text-base-content/70 space-y-1">
                            <li>• Lost or damaged original receipts</li>
                            <li>• Cash transactions without POS system</li>
                            <li>• Service-based business transactions</li>
                            <li>• Backup for bookkeeping records</li>
                        </ul>
                    </div>
                    
                    <div>
                        <h4 class="font-bold mb-2">Legal Compliance</h4>
                        <ul class="text-sm text-base-content/70 space-y-1">
                            <li>• Only for legitimate business transactions</li>
                            <li>• Must accurately reflect actual purchases</li>
                            <li>• Keep supporting documentation</li>
                            <li>• Not for fraudulent purposes</li>
                        </ul>
                    </div>
                </div>

                <div class="divider"></div>

                <div class="text-center">
                    <h4 class="font-bold mb-2">Privacy Guarantee</h4>
                    <p class="text-sm text-base-content/60">
                        All receipt generation happens locally in your browser. 
                        No data is sent to external servers.
                    </p>
                </div>
            </div>
        </div>
    </div>

    <script>
        const { createApp } = Vue;
        
        createApp({
            data() {
                return {
                    receipt: {
                        businessName: '',
                        businessAddress: '',
                        businessPhone: '',
                        businessEmail: '',
                        logo: null,
                        receiptNumber: '',
                        date: new Date().toISOString().split('T')[0],
                        paymentMethod: 'Cash',
                        items: [
                            { description: '', quantity: 1, price: 0 }
                        ],
                        taxRate: 0
                    },
                    hasSavedBusinessInfo: false
                };
            },
            computed: {
                validItems() {
                    return this.receipt.items.filter(item => 
                        item.description && item.quantity > 0 && item.price > 0
                    );
                },
                subtotal() {
                    return this.validItems.reduce((sum, item) => 
                        sum + (item.quantity * item.price), 0
                    );
                },
                taxAmount() {
                    return this.subtotal * (this.receipt.taxRate / 100);
                },
                total() {
                    return this.subtotal + this.taxAmount;
                },
                isValidReceipt() {
                    return this.receipt.businessName && 
                           this.receipt.date && 
                           this.validItems.length > 0;
                },
                hasContactInfo() {
                    return this.receipt.businessPhone || this.receipt.businessEmail;
                },
                receiptNumber() {
                    return this.receipt.receiptNumber || 'N/A';
                }
            },
            mounted() {
                this.checkSavedBusinessInfo();
            },
            methods: {
                handleLogoUpload(event) {
                    const file = event.target.files[0];
                    if (file && file.type.startsWith('image/')) {
                        const reader = new FileReader();
                        reader.onload = (e) => {
                            this.receipt.logo = e.target.result;
                        };
                        reader.readAsDataURL(file);
                    }
                },
                
                removeLogo() {
                    this.receipt.logo = null;
                },
                
                addItem() {
                    this.receipt.items.push({ 
                        description: '', 
                        quantity: 1, 
                        price: 0 
                    });
                },
                
                removeItem(index) {
                    this.receipt.items.splice(index, 1);
                },
                
                saveBusinessInfo() {
                    const businessInfo = {
                        businessName: this.receipt.businessName,
                        businessAddress: this.receipt.businessAddress,
                        businessPhone: this.receipt.businessPhone,
                        businessEmail: this.receipt.businessEmail,
                        logo: this.receipt.logo
                    };
                    
                    try {
                        localStorage.setItem('receiptBusinessInfo', JSON.stringify(businessInfo));
                        this.hasSavedBusinessInfo = true;
                        alert('Business information saved successfully!');
                    } catch (e) {
                        alert('Could not save business information. Please try again.');
                    }
                },
                
                loadBusinessInfo() {
                    try {
                        const saved = localStorage.getItem('receiptBusinessInfo');
                        if (saved) {
                            const businessInfo = JSON.parse(saved);
                            Object.assign(this.receipt, businessInfo);
                        }
                    } catch (e) {
                        alert('Could not load saved information.');
                    }
                },
                
                checkSavedBusinessInfo() {
                    try {
                        this.hasSavedBusinessInfo = !!localStorage.getItem('receiptBusinessInfo');
                    } catch (e) {
                        this.hasSavedBusinessInfo = false;
                    }
                },
                
                formatDate(dateStr) {
                    if (!dateStr) return 'N/A';
                    const date = new Date(dateStr);
                    return date.toLocaleDateString('en-US', {
                        year: 'numeric',
                        month: 'long',
                        day: 'numeric'
                    });
                },
                
                generatePDF() {
                    if (!this.isValidReceipt) return;
                    
                    const { jsPDF } = window.jspdf;
                    const doc = new jsPDF();
                    
                    let yPos = 20;
                    
                    doc.setFontSize(20);
                    doc.setFont(undefined, 'bold');
                    doc.text(this.receipt.businessName, 105, yPos, { align: 'center' });
                    yPos += 10;
                    
                    doc.setFontSize(10);
                    doc.setFont(undefined, 'normal');
                    if (this.receipt.businessAddress) {
                        doc.text(this.receipt.businessAddress, 105, yPos, { align: 'center' });
                        yPos += 5;
                    }
                    if (this.receipt.businessPhone || this.receipt.businessEmail) {
                        const contact = [this.receipt.businessPhone, this.receipt.businessEmail]
                            .filter(Boolean).join(' • ');
                        doc.text(contact, 105, yPos, { align: 'center' });
                        yPos += 5;
                    }
                    
                    yPos += 10;
                    
                    doc.setFontSize(12);
                    doc.text(`Receipt #: ${this.receiptNumber}`, 20, yPos);
                    yPos += 7;
                    doc.text(`Date: ${this.formatDate(this.receipt.date)}`, 20, yPos);
                    yPos += 7;
                    doc.text(`Payment: ${this.receipt.paymentMethod}`, 20, yPos);
                    yPos += 10;
                    
                    doc.line(20, yPos, 190, yPos);
                    yPos += 10;
                    
                    doc.setFont(undefined, 'bold');
                    doc.text('Item', 20, yPos);
                    doc.text('Amount', 190, yPos, { align: 'right' });
                    doc.setFont(undefined, 'normal');
                    yPos += 10;
                    
                    this.validItems.forEach(item => {
                        doc.text(item.description, 20, yPos);
                        doc.text(`$${(item.quantity * item.price).toFixed(2)}`, 190, yPos, { align: 'right' });
                        yPos += 5;
                        doc.setFontSize(10);
                        doc.text(`  ${item.quantity} × $${item.price.toFixed(2)}`, 20, yPos);
                        doc.setFontSize(12);
                        yPos += 8;
                    });
                    
                    doc.line(20, yPos, 190, yPos);
                    yPos += 10;
                    
                    doc.text('Subtotal:', 140, yPos);
                    doc.text(`$${this.subtotal.toFixed(2)}`, 190, yPos, { align: 'right' });
                    yPos += 7;
                    
                    doc.text(`Tax (${this.receipt.taxRate}%):`, 140, yPos);
                    doc.text(`$${this.taxAmount.toFixed(2)}`, 190, yPos, { align: 'right' });
                    yPos += 7;
                    
                    doc.line(140, yPos, 190, yPos);
                    yPos += 7;
                    
                    doc.setFont(undefined, 'bold');
                    doc.setFontSize(14);
                    doc.text('Total:', 140, yPos);
                    doc.text(`$${this.total.toFixed(2)}`, 190, yPos, { align: 'right' });
                    
                    doc.setFont(undefined, 'normal');
                    doc.setFontSize(10);
                    doc.text('Thank you for your business!', 105, 250, { align: 'center' });
                    doc.text('This receipt was generated for bookkeeping purposes.', 105, 257, { align: 'center' });
                    doc.text('For questions about this transaction, please contact us.', 105, 264, { align: 'center' });
                    
                    const fileName = `receipt_${this.receiptNumber || 'NA'}_${this.receipt.date}.pdf`;
                    doc.save(fileName);
                },
                
                printReceipt() {
                    if (!this.isValidReceipt) return;
                    window.print();
                },
                
                resetReceipt() {
                    if (confirm('Are you sure you want to start a new receipt?')) {
                        const businessInfo = {
                            businessName: this.receipt.businessName,
                            businessAddress: this.receipt.businessAddress,
                            businessPhone: this.receipt.businessPhone,
                            businessEmail: this.receipt.businessEmail,
                            logo: this.receipt.logo
                        };
                        
                        this.receipt = {
                            ...businessInfo,
                            receiptNumber: '',
                            date: new Date().toISOString().split('T')[0],
                            paymentMethod: 'Cash',
                            items: [{ description: '', quantity: 1, price: 0 }],
                            taxRate: this.receipt.taxRate
                        };
                    }
                }
            }
        }).mount('#app');
    </script>

    {% include modals.liquid %} 
    {% include footer.liquid %}

</body>
</html>